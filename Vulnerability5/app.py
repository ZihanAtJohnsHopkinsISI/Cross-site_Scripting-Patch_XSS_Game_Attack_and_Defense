
from flask import Flask, render_template, request, make_response
from urllib.parse import urlparse, urljoin

app = Flask(__name__, template_folder='')
def checkURLSafe(url):
    """
    Check if a URL is safe.

    Parameters:
    - url (str): The URL to verify.

    Returns:
    - bool: True if the URL is considered safe, False otherwise.
    """
    
    # Disallowing javascript: scheme specifically
    if "javascript:" in url:
        return False

    # Parse the URL
    parsed_url = urlparse(url)

    # Check if URL uses HTTPS (optional depending on your use case)
    if parsed_url.scheme not in ("https", "http", ""):
        return False

    # Check if URL is absolute
    if bool(parsed_url.netloc):
        return False

    return True


@app.route('/signup')
def signup():
    next = request.args.get('next', '')

    if checkURLSafe(next) == False:
        next = '/signup?next=confirm'
        print(1)

    response = render_template('signup.html', next = next)
    
    #response = make_response(response)
    return response

@app.route('/')
@app.route('/<path>')
def main_page(path = ""):
    headers = {"X-XSS-Protection": "0"}

    if "signup" in path:
        response = render_template('signup.html', next=request.args.get('next', ''))
    elif "javascript" in path:
        response = signup()
    elif "confirm" in path:
        response = render_template('confirm.html', next=request.args.get('next', 'welcome'))
    else:
        response = render_template('welcome.html')
    
    response = make_response(response)
    return response


if __name__ == '__main__':
    app.run(debug=True, port = 5001)
